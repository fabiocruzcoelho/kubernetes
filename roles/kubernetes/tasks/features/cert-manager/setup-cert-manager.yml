---
- name: Install cert-manager with Helm.
  community.kubernetes.helm:
    name: cert-manager
    chart_ref: center/jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    values:
      installCRDs: true

- name: Waiting for deployment cert-manager to be ready
  command: kubectl rollout status deployment/cert-manager -n cert-manager

- name: Copy templates cert-manager
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  loop:
    - { src: cert-manager-gpc-secret-key.json.j2, dest: "{{ tmp_dir }}/key.json" }
    - { src: cert-manage-issuer-stg.yaml.j2, dest: "{{ tmp_dir }}/issue-stg.yaml" }
    - { src: cert-manage-issuer-prd.yaml.j2, dest: "{{ tmp_dir }}/issue-prd.yaml" }

- name: Check if secret clouddns-dns01-solver-svc-acct exist
  command: kubectl get secret {{ kubernetes_cert_manager_secret_name }} -n cert-manager
  register: secret_result

- name: Set up a Service Account CloudDNS (GCP)
  command: kubectl create secret generic {{ kubernetes_cert_manager_secret_name }} --from-file="{{ tmp_dir }}/key.json" -n cert-manager
  when: secret_result.rc != 0

- name: Configure SSL wildcard issuers stg, prd
  command: "{{ item }}"
  loop:
    - kubectl apply -f {{ tmp_dir }}/issue-stg.yaml
    - kubectl apply -f {{ tmp_dir }}/issue-prd.yaml
  register: issues_result
  changed_when: "'created' in issues_result"

- name: Install kubed with Helm.
  community.kubernetes.helm:
    name: kubed
    chart_ref: center/appscode/kubed
    chart_version: v0.12.0
    release_namespace: kube-system
    create_namespace: true
    values:
     apiserver:
      enabled: false
     config:
      clusterName: klabs

- name: Annotate wildcard secret on namespoace cert-manager with kubed
  command: "{{ item }}"
  loop:
    - kubectl annotate secret {{ letsencrypt_certificate_name_stg }}-tls -n cert-manager kubed.appscode.com/sync="app=kubed"
    - kubectl annotate secret {{ letsencrypt_certificate_name_prod }}-tls -n cert-manager kubed.appscode.com/sync="app=kubed"
  ignore_errors: yes
